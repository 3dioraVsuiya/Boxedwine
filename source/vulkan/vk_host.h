#ifndef __VK_HOST__H__
#define __VK_HOST__H__
void vk_CreateInstance(CPU* cpu);
void vk_DestroyInstance(CPU* cpu);
void vk_EnumeratePhysicalDevices(CPU* cpu);
void vk_GetPhysicalDeviceProperties(CPU* cpu);
void vk_GetPhysicalDeviceQueueFamilyProperties(CPU* cpu);
void vk_GetPhysicalDeviceMemoryProperties(CPU* cpu);
void vk_GetPhysicalDeviceFeatures(CPU* cpu);
void vk_GetPhysicalDeviceFormatProperties(CPU* cpu);
void vk_GetPhysicalDeviceImageFormatProperties(CPU* cpu);
void vk_CreateDevice(CPU* cpu);
void vk_DestroyDevice(CPU* cpu);
void vk_EnumerateInstanceVersion(CPU* cpu);
void vk_EnumerateInstanceLayerProperties(CPU* cpu);
void vk_EnumerateInstanceExtensionProperties(CPU* cpu);
void vk_EnumerateDeviceLayerProperties(CPU* cpu);
void vk_EnumerateDeviceExtensionProperties(CPU* cpu);
void vk_GetDeviceQueue(CPU* cpu);
void vk_QueueSubmit(CPU* cpu);
void vk_QueueWaitIdle(CPU* cpu);
void vk_DeviceWaitIdle(CPU* cpu);
void vk_AllocateMemory(CPU* cpu);
void vk_FreeMemory(CPU* cpu);
void vk_MapMemory(CPU* cpu);
void vk_UnmapMemory(CPU* cpu);
void vk_FlushMappedMemoryRanges(CPU* cpu);
void vk_InvalidateMappedMemoryRanges(CPU* cpu);
void vk_GetDeviceMemoryCommitment(CPU* cpu);
void vk_GetBufferMemoryRequirements(CPU* cpu);
void vk_BindBufferMemory(CPU* cpu);
void vk_GetImageMemoryRequirements(CPU* cpu);
void vk_BindImageMemory(CPU* cpu);
void vk_GetImageSparseMemoryRequirements(CPU* cpu);
void vk_GetPhysicalDeviceSparseImageFormatProperties(CPU* cpu);
void vk_QueueBindSparse(CPU* cpu);
void vk_CreateFence(CPU* cpu);
void vk_DestroyFence(CPU* cpu);
void vk_ResetFences(CPU* cpu);
void vk_GetFenceStatus(CPU* cpu);
void vk_WaitForFences(CPU* cpu);
void vk_CreateSemaphore(CPU* cpu);
void vk_DestroySemaphore(CPU* cpu);
void vk_CreateEvent(CPU* cpu);
void vk_DestroyEvent(CPU* cpu);
void vk_GetEventStatus(CPU* cpu);
void vk_SetEvent(CPU* cpu);
void vk_ResetEvent(CPU* cpu);
void vk_CreateQueryPool(CPU* cpu);
void vk_DestroyQueryPool(CPU* cpu);
void vk_GetQueryPoolResults(CPU* cpu);
void vk_ResetQueryPool(CPU* cpu);
void vk_CreateBuffer(CPU* cpu);
void vk_DestroyBuffer(CPU* cpu);
void vk_CreateBufferView(CPU* cpu);
void vk_DestroyBufferView(CPU* cpu);
void vk_CreateImage(CPU* cpu);
void vk_DestroyImage(CPU* cpu);
void vk_GetImageSubresourceLayout(CPU* cpu);
void vk_CreateImageView(CPU* cpu);
void vk_DestroyImageView(CPU* cpu);
void vk_CreateShaderModule(CPU* cpu);
void vk_DestroyShaderModule(CPU* cpu);
void vk_CreatePipelineCache(CPU* cpu);
void vk_DestroyPipelineCache(CPU* cpu);
void vk_GetPipelineCacheData(CPU* cpu);
void vk_MergePipelineCaches(CPU* cpu);
void vk_CreateGraphicsPipelines(CPU* cpu);
void vk_CreateComputePipelines(CPU* cpu);
void vk_DestroyPipeline(CPU* cpu);
void vk_CreatePipelineLayout(CPU* cpu);
void vk_DestroyPipelineLayout(CPU* cpu);
void vk_CreateSampler(CPU* cpu);
void vk_DestroySampler(CPU* cpu);
void vk_CreateDescriptorSetLayout(CPU* cpu);
void vk_DestroyDescriptorSetLayout(CPU* cpu);
void vk_CreateDescriptorPool(CPU* cpu);
void vk_DestroyDescriptorPool(CPU* cpu);
void vk_ResetDescriptorPool(CPU* cpu);
void vk_AllocateDescriptorSets(CPU* cpu);
void vk_FreeDescriptorSets(CPU* cpu);
void vk_UpdateDescriptorSets(CPU* cpu);
void vk_CreateFramebuffer(CPU* cpu);
void vk_DestroyFramebuffer(CPU* cpu);
void vk_CreateRenderPass(CPU* cpu);
void vk_DestroyRenderPass(CPU* cpu);
void vk_GetRenderAreaGranularity(CPU* cpu);
void vk_CreateCommandPool(CPU* cpu);
void vk_DestroyCommandPool(CPU* cpu);
void vk_ResetCommandPool(CPU* cpu);
void vk_AllocateCommandBuffers(CPU* cpu);
void vk_FreeCommandBuffers(CPU* cpu);
void vk_BeginCommandBuffer(CPU* cpu);
void vk_EndCommandBuffer(CPU* cpu);
void vk_ResetCommandBuffer(CPU* cpu);
void vk_CmdBindPipeline(CPU* cpu);
void vk_CmdSetViewport(CPU* cpu);
void vk_CmdSetScissor(CPU* cpu);
void vk_CmdSetLineWidth(CPU* cpu);
void vk_CmdSetDepthBias(CPU* cpu);
void vk_CmdSetBlendConstants(CPU* cpu);
void vk_CmdSetDepthBounds(CPU* cpu);
void vk_CmdSetStencilCompareMask(CPU* cpu);
void vk_CmdSetStencilWriteMask(CPU* cpu);
void vk_CmdSetStencilReference(CPU* cpu);
void vk_CmdBindDescriptorSets(CPU* cpu);
void vk_CmdBindIndexBuffer(CPU* cpu);
void vk_CmdBindVertexBuffers(CPU* cpu);
void vk_CmdDraw(CPU* cpu);
void vk_CmdDrawIndexed(CPU* cpu);
void vk_CmdDrawIndirect(CPU* cpu);
void vk_CmdDrawIndexedIndirect(CPU* cpu);
void vk_CmdDispatch(CPU* cpu);
void vk_CmdDispatchIndirect(CPU* cpu);
void vk_CmdCopyBuffer(CPU* cpu);
void vk_CmdCopyImage(CPU* cpu);
void vk_CmdBlitImage(CPU* cpu);
void vk_CmdCopyBufferToImage(CPU* cpu);
void vk_CmdCopyImageToBuffer(CPU* cpu);
void vk_CmdUpdateBuffer(CPU* cpu);
void vk_CmdFillBuffer(CPU* cpu);
void vk_CmdClearColorImage(CPU* cpu);
void vk_CmdClearDepthStencilImage(CPU* cpu);
void vk_CmdClearAttachments(CPU* cpu);
void vk_CmdResolveImage(CPU* cpu);
void vk_CmdSetEvent(CPU* cpu);
void vk_CmdResetEvent(CPU* cpu);
void vk_CmdWaitEvents(CPU* cpu);
void vk_CmdPipelineBarrier(CPU* cpu);
void vk_CmdBeginQuery(CPU* cpu);
void vk_CmdEndQuery(CPU* cpu);
void vk_CmdResetQueryPool(CPU* cpu);
void vk_CmdWriteTimestamp(CPU* cpu);
void vk_CmdCopyQueryPoolResults(CPU* cpu);
void vk_CmdPushConstants(CPU* cpu);
void vk_CmdBeginRenderPass(CPU* cpu);
void vk_CmdNextSubpass(CPU* cpu);
void vk_CmdEndRenderPass(CPU* cpu);
void vk_CmdExecuteCommands(CPU* cpu);
void vk_GetPhysicalDeviceFeatures2(CPU* cpu);
void vk_GetPhysicalDeviceProperties2(CPU* cpu);
void vk_GetPhysicalDeviceFormatProperties2(CPU* cpu);
void vk_GetPhysicalDeviceImageFormatProperties2(CPU* cpu);
void vk_GetPhysicalDeviceQueueFamilyProperties2(CPU* cpu);
void vk_GetPhysicalDeviceMemoryProperties2(CPU* cpu);
void vk_GetPhysicalDeviceSparseImageFormatProperties2(CPU* cpu);
void vk_TrimCommandPool(CPU* cpu);
void vk_GetPhysicalDeviceExternalBufferProperties(CPU* cpu);
void vk_GetPhysicalDeviceExternalSemaphoreProperties(CPU* cpu);
void vk_GetPhysicalDeviceExternalFenceProperties(CPU* cpu);
void vk_EnumeratePhysicalDeviceGroups(CPU* cpu);
void vk_GetDeviceGroupPeerMemoryFeatures(CPU* cpu);
void vk_BindBufferMemory2(CPU* cpu);
void vk_BindImageMemory2(CPU* cpu);
void vk_CmdSetDeviceMask(CPU* cpu);
void vk_CmdDispatchBase(CPU* cpu);
void vk_CreateDescriptorUpdateTemplate(CPU* cpu);
void vk_DestroyDescriptorUpdateTemplate(CPU* cpu);
void vk_UpdateDescriptorSetWithTemplate(CPU* cpu);
void vk_GetBufferMemoryRequirements2(CPU* cpu);
void vk_GetImageMemoryRequirements2(CPU* cpu);
void vk_GetImageSparseMemoryRequirements2(CPU* cpu);
void vk_CreateSamplerYcbcrConversion(CPU* cpu);
void vk_DestroySamplerYcbcrConversion(CPU* cpu);
void vk_GetDeviceQueue2(CPU* cpu);
void vk_GetDescriptorSetLayoutSupport(CPU* cpu);
void vk_CreateRenderPass2(CPU* cpu);
void vk_CmdBeginRenderPass2(CPU* cpu);
void vk_CmdNextSubpass2(CPU* cpu);
void vk_CmdEndRenderPass2(CPU* cpu);
void vk_GetSemaphoreCounterValue(CPU* cpu);
void vk_WaitSemaphores(CPU* cpu);
void vk_SignalSemaphore(CPU* cpu);
void vk_CmdDrawIndirectCount(CPU* cpu);
void vk_CmdDrawIndexedIndirectCount(CPU* cpu);
void vk_GetBufferOpaqueCaptureAddress(CPU* cpu);
void vk_GetBufferDeviceAddress(CPU* cpu);
void vk_GetDeviceMemoryOpaqueCaptureAddress(CPU* cpu);
#endif
